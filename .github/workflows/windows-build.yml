# .github/workflows/build-and-release.yml
name: Build & Release

on:
  push:
    branches:
      - main

jobs:
  build_and_release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pyinstaller customtkinter pyserial

      - name: Build .exe with PyInstaller
        run: pyinstaller --onefile --windowed --name as511_tool --add-data "views;views" as511_gui.py

      - name: Compute release tag
        shell: pwsh
        run: |
          $tag = Get-Date -Format 'yyyy-MM-dd_HH-mm'
          echo "TAG=$tag" >> $env:GITHUB_ENV

      - name: Compress EXE into ZIP
        shell: pwsh
        run: |
          $zip = "${{ env.TAG }}.zip"
          Compress-Archive -Path dist\as511_tool.exe -DestinationPath $zip -Force

      - name: Create GitHub Release & upload ZIP
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const zip = `${process.env.TAG}.zip`;
            const content = fs.readFileSync(zip);
            // create or update release
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.TAG,
              name: process.env.TAG,
              body: `Automated build for ${process.env.TAG}`,
              draft: false,
              prerelease: false
            });
            // upload the ZIP
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: zip,
              data: content,
              headers: { 'content-type': 'application/zip' }
            });
